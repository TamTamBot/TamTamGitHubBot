package com.github.senyast4745.testbot.repos;

import com.github.senyast4745.testbot.utils.PostgresJDBCUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.sql.SQLException;
import java.util.List;

public class GitHubUser {

    private static final Logger log = LoggerFactory.getLogger(GitHubUser.class);

    private static final String createTableSQL = "create table if not exists users (\r\n" +
            " id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
            "  tamtam_user_id bigint not null,\r\n" + "  git_hub_repo varchar(127) not null\r\n" + "  ) ;";

    private static final String insertNewUser = "insert into users (tamtam_user_id, git_hub_repo) \r\nvalues(%d , '%s') ;";

    private static final String selectTamTamUser = "select tamtam_user_id from users where git_hub_repo = '%s' ;";

    public static void init() {
        try {

            PostgresJDBCUtils.createTable(createTableSQL);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static List<Long> getTamTamUser(String gitHubUserId) throws SQLException {

         return PostgresJDBCUtils.executeQuery(String.format(selectTamTamUser, gitHubUserId));
         /*long tamtamId = set.getLong(0);
         set.close();
         return tamtamId;
*/
    }

    public static void insertNewTamTamUser(long tamTamUserId, String gitHubUserUd) throws SQLException {
        if (!getTamTamUser(gitHubUserUd).contains(tamTamUserId)) {
            log.info("INSERT NEW DATA");
            PostgresJDBCUtils.executeUpdate(String.format(insertNewUser, tamTamUserId, gitHubUserUd));
        }

    }
}

