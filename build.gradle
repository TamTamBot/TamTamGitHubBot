plugins {
    id 'java'
    id "io.freefair.lombok" version "4.1.2"
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'distribution'
}

group 'com.github.senyast4745'
version '1.0-SNAPSHOT'

sourceCompatibility = 8

repositories {
    mavenCentral()
}

def prodProfiles = 'prod'
def devProfiles = 'dev'
def testProfiles = 'test'
def localProfiles = 'local'
def propertyDrivenProfiles

if (project.hasProperty('prod')) {
    propertyDrivenProfiles = prodProfiles
} else if (project.hasProperty('dev')) {
    propertyDrivenProfiles = devProfiles
} else if (project.hasProperty('test')) {
    propertyDrivenProfiles = testProfiles
} else {
    propertyDrivenProfiles = localProfiles
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.senyast4745.testbot.Main'
    }
}

shadowJar {
    exclude '*.properties'
}


dependencies {
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha4'
    compile 'com.sparkjava:spark-core:2.3'
    compile('chat.tamtam:tamtam-bot-api:0.1.9')
    compile group: 'org.kohsuke', name: 'github-api', version: '1.95'
//    compile group: 'com.h2database', name: 'h2', version: '1.4.199'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.9.0'

    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
    compile group: 'com.squareup.okhttp3', name: 'okhttp-urlconnection', version: '3.9.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'

}

distributions {


    //noinspection GroovyAssignabilityCheck
    main {
        baseName = 'githubbotbot'

        distTar {
            compression = Compression.GZIP
            extension = 'tar.gz'
        }
        contents {
            from(shadowJar) {

                include "*.jar"
                fileMode = 0755
            }
            into('config') {  // Contents of this directory are copied by default
                from 'src/main/resources/'
                include '*.properties'
                dirMode = 0755
                fileMode = 0644
            }
            
            /*
            filter(ReplaceTokens, tokens: [act_profile: propertyDrivenProfiles ])
            filteringCharset = 'UTF-8'*/
        }
    }
}

